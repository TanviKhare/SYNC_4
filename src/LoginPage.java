/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author tanvi
 */

import java.sql.*;
import java.util.*;
import ebs.connectionProvider;
import javax.swing.JOptionPane;

public class LoginPage extends javax.swing.JFrame {

    Connection con;
    Statement stmt;   
    Scanner sc;
    
    //boolean loggedIn;   
    
    /**
     * Creates new form LoginPage
     */
    public LoginPage() {
        initComponents();
        try{
            con = connectionProvider.getConnection();
            stmt = con.createStatement();
            sc = new Scanner(System.in);
        }catch(Exception e){
            e.printStackTrace();
            System.out.println(e);
            JOptionPane.showMessageDialog(null,"Could not start the application!");
            //this.dispose();        }
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("main");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 80, 140, -1));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Enter Username : ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 85, 115, -1));

        jLabel2.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Enter Password : ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 125, 115, -1));

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 255, 255));
        jLabel3.setText("If you don't have an account : ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 219, 194, -1));

        jButton1.setFont(new java.awt.Font("sansserif", 3, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 51, 51));
        jButton1.setText("Sign Up");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 213, -1, -1));

        jButton2.setFont(new java.awt.Font("sansserif", 3, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 51, 51));
        jButton2.setText("Sign In");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 165, 73, -1));

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 255));
        jLabel4.setText("Welcome to the Electricity Billing System!");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 6, 375, 32));
        getContentPane().add(jPasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 140, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/loginBG.jpg"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 270));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String uname = jTextField2.getText();
        String upass = jPasswordField1.getText();
        //System.out.println(uname + " " + upass);
        if(uname.length() == 0 || upass.length() == 0)
        {
            System.out.println("Field cannot be empty!");
            JOptionPane.showMessageDialog(null,"Field cannot be empty!");
            return;
        }
        String query = "SELECT admin FROM user_details WHERE username = '"+uname+"' AND password = '"+upass+"';";
        try{
            ResultSet rs = stmt.executeQuery(query);
            if(rs.next())
            {
                /*
                HashMap<String,String> info = new HashMap<>();
                info.put("username",rs.getString("username"));
                info.put("name",rs.getString("name"));
                info.put("password",rs.getString("password"));
                info.put("city",rs.getString("city"));
                info.put("contact",rs.getString("contact"));
                info.put("email",rs.getString("email"));
                */
                if(rs.getBoolean("admin") == true)
                {
                    // send resources to other page                   
                    setVisible(false);
                    new DashboardAdmin(uname);
                }else{
                    String query2 = "SELECT * FROM meter_details WHERE created = true AND username = '"+uname+"';";
                    try{
                        ResultSet rs2 = stmt.executeQuery(query2);
                        if(rs2.next())
                        {
                            rs2.close();
                            setVisible(false);
                            new Dashboard(uname);
                        }else{
                            System.out.println("User registered but account not activated! Please sign up!");
                            JOptionPane.showMessageDialog(null,"User registered but account not activated! Please sign up!");
                        }
                        
                    }catch(Exception e){
                        e.printStackTrace();
                        System.out.println("Error!" + e);
                        JOptionPane.showMessageDialog(null,"Error");
                    }
                    
                }
            }else{
                System.out.println("User with given credentials does not exist!");
                JOptionPane.showMessageDialog(null,"User with given credentials does not exist!");
                return;
            }
            
            
            rs.close();
        }catch(Exception e)
        {
            e.printStackTrace();
            System.out.println(e);
        }
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new SignupPage().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}

/*
create table user_details(
username varchar(255),
name varchar(255) not null,
password varchar(255) not null,
contact varchar(10) not null,
email varchar(255) not null,
city varchar(255) not null,
admin boolean default false not null,
activated_on timstamp default current_timestamp,
primary key(username)
);

insert into user_details value("admin1","admin1","admin1","1111111111","admin1@gmail.com","mumbai",true);
insert into user_details value("admin2","admin2","admin2","2222222222","admin2@gmail.com","pune",true);
insert into user_details value("admin3","admin3","admin3","3333333333","admin3@gmail.com","delhi",true);
insert into user_details value("admin4","admin4","admin4","4444444444","admin4@gmail.com","kolkata",true);
insert into user_details value("admin5","admin5","admin5","5555555555","admin5@gmail.com","chennai",true);

insert into user_details value("user1","user1","user1","1111122222","user1@gmail.com","mumbai",false);
insert into user_details value("user2","user2","user2","2222233333","user2@gmail.com","pune",false);
insert into user_details value("user3","user3","user3","3333344444","user3@gmail.com","delhi",false);
insert into user_details value("user4","user4","user4","4444455555","user4@gmail.com","kolkata",false);
insert into user_details value("user5","user5","user5","5555511111","user5@gmail.com","chennai",false);

create table meter_details(
meterid int AUTO_INCREMENT,
username varchar(255) not null,
location varchar(255) not null,
type varchar(255) not null,
days int not null,
created boolean default false not null,
created_on timstamp default current_timestamp,
primary key(meterid)
);

insert into meter_details(username,location,type,days) values("user1","inside","digital",30);
insert into meter_details(username,location,type,days) values("user2","inside","digital",30);
insert into meter_details(username,location,type,days) values("user3","inside","digital",30);
insert into meter_details(username,location,type,days) values("user4","outside","digital",30);
insert into meter_details(username,location,type,days) values("user5","outside","digital",30);

create table bills(
billid int AUTO_INCREMENT,
userName varchar(255) NOT NULL,
location varchar(255) NOT NULL, 
amount float not null,
units int not null,
month varchar(3) not null,
year varchar(4) not null,
generated_on timestamp default current_timestamp,
paid_on timestamp,
paid boolean default false not null,
primary key(billid)
);

*/